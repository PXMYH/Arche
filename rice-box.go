package main

import (
	"github.com/GeertJohan/go.rice/embedded"
	"time"
)

func init() {

	// define files
	file2 := &embedded.EmbeddedFile{
		Filename:    "app.js",
		FileModTime: time.Unix(1531606705, 0),
		Content:     string("var crudApp = new function () {\n\n  // AN ARRAY OF JSON OBJECTS WITH VALUES.\n  this.drivers = [\n      { ID: '1', Driver_Name: 'Daniel', Category: 'Red Bull', Price: 10 },\n      { ID: '2', Driver_Name: 'Lewis', Category: 'Mercedes', Price: 33 },\n      { ID: '3', Driver_Name: 'Max', Category: 'Red Bull', Price: 10 }\n  ]\n\n  this.category = ['Red Bull', 'Mercedes', 'Ferrari', 'Haas'];\n  this.col = [];\n\n  this.createTable = function () {\n\n      // EXTRACT VALUE FOR TABLE HEADER.\n      for (var i = 0; i < this.drivers.length; i++) {\n          for (var key in this.drivers[i]) {\n              if (this.col.indexOf(key) === -1) {\n                  this.col.push(key);\n              }\n          }\n      }\n\n      // CREATE A TABLE.\n      var table = document.createElement('table');\n      table.setAttribute('id', 'booksTable');     // SET TABLE ID.\n\n      var tr = table.insertRow(-1);               // CREATE A ROW (FOR HEADER).\n\n      for (var h = 0; h < this.col.length; h++) {\n          // ADD TABLE HEADER.\n          var th = document.createElement('th');\n          th.innerHTML = this.col[h].replace('_', ' ');\n          tr.appendChild(th);\n      }\n\n      // ADD ROWS USING JSON DATA.\n      for (var i = 0; i < this.drivers.length; i++) {\n\n          tr = table.insertRow(-1);           // CREATE A NEW ROW.\n\n          for (var j = 0; j < this.col.length; j++) {\n              var tabCell = tr.insertCell(-1);\n              tabCell.innerHTML = this.drivers[i][this.col[j]];\n          }\n\n          // DYNAMICALLY CREATE AND ADD ELEMENTS TO TABLE CELLS WITH EVENTS.\n\n          this.td = document.createElement('td');\n\n          // *** CANCEL OPTION.\n          tr.appendChild(this.td);\n          var lblCancel = document.createElement('label');\n          lblCancel.innerHTML = 'âœ–';\n          lblCancel.setAttribute('onclick', 'crudApp.Cancel(this)');\n          lblCancel.setAttribute('style', 'display:none;');\n          lblCancel.setAttribute('title', 'Cancel');\n          lblCancel.setAttribute('id', 'lbl' + i);\n          this.td.appendChild(lblCancel);\n\n          // *** SAVE.\n          tr.appendChild(this.td);\n          var btSave = document.createElement('input');\n\n          btSave.setAttribute('type', 'button');      // SET ATTRIBUTES.\n          btSave.setAttribute('value', 'Save');\n          btSave.setAttribute('id', 'Save' + i);\n          btSave.setAttribute('style', 'display:none;');\n          btSave.setAttribute('onclick', 'crudApp.Save(this)');       // ADD THE BUTTON's 'onclick' EVENT.\n          this.td.appendChild(btSave);\n\n          // *** UPDATE.\n          tr.appendChild(this.td);\n          var btUpdate = document.createElement('input');\n\n          btUpdate.setAttribute('type', 'button');    // SET ATTRIBUTES.\n          btUpdate.setAttribute('value', 'Update');\n          btUpdate.setAttribute('id', 'Edit' + i);\n          btUpdate.setAttribute('style', 'background-color:#44CCEB;');\n          btUpdate.setAttribute('onclick', 'crudApp.Update(this)');   // ADD THE BUTTON's 'onclick' EVENT.\n          this.td.appendChild(btUpdate);\n\n          // *** DELETE.\n          this.td = document.createElement('th');\n          tr.appendChild(this.td);\n          var btDelete = document.createElement('input');\n          btDelete.setAttribute('type', 'button');    // SET INPUT ATTRIBUTE.\n          btDelete.setAttribute('value', 'Delete');\n          btDelete.setAttribute('style', 'background-color:#ED5650;');\n          btDelete.setAttribute('onclick', 'crudApp.Delete(this)');   // ADD THE BUTTON's 'onclick' EVENT.\n          this.td.appendChild(btDelete);\n      }\n\n\n      // ADD A ROW AT THE END WITH BLANK TEXTBOXES AND A DROPDOWN LIST (FOR NEW ENTRY).\n\n      tr = table.insertRow(-1);           // CREATE THE LAST ROW.\n\n      for (var j = 0; j < this.col.length; j++) {\n          var newCell = tr.insertCell(-1);\n          if (j >= 1) {\n\n              if (j == 2) {   // WE'LL ADD A DROPDOWN LIST AT THE SECOND COLUMN (FOR Category).\n\n                  var select = document.createElement('select');      // CREATE AND ADD A DROPDOWN LIST.\n                  select.innerHTML = '<option value=\"\"></option>';\n                  for (k = 0; k < this.category.length; k++) {\n                      select.innerHTML = select.innerHTML +\n                          '<option value=\"' + this.category[k] + '\">' + this.category[k] + '</option>';\n                  }\n                  newCell.appendChild(select);\n              }\n              else {\n                  var tBox = document.createElement('input');          // CREATE AND ADD A TEXTBOX.\n                  tBox.setAttribute('type', 'text');\n                  tBox.setAttribute('value', '');\n                  newCell.appendChild(tBox);\n              }\n          }\n      }\n\n      this.td = document.createElement('td');\n      tr.appendChild(this.td);\n\n      var btNew = document.createElement('input');\n\n      btNew.setAttribute('type', 'button');       // SET ATTRIBUTES.\n      btNew.setAttribute('value', 'Create');\n      btNew.setAttribute('id', 'New' + i);\n      btNew.setAttribute('style', 'background-color:#207DD1;');\n      btNew.setAttribute('onclick', 'crudApp.CreateNew(this)');       // ADD THE BUTTON's 'onclick' EVENT.\n      this.td.appendChild(btNew);\n\n      var div = document.getElementById('container');\n      div.innerHTML = '';\n      div.appendChild(table);    // ADD THE TABLE TO THE WEB PAGE.\n  };\n\n  // ****** OPERATIONS START.\n\n  // CANCEL.\n  this.Cancel = function (oButton) {\n\n      // HIDE THIS BUTTON.\n      oButton.setAttribute('style', 'display:none; float:none;');\n\n      var activeRow = oButton.parentNode.parentNode.rowIndex;\n\n      // HIDE THE SAVE BUTTON.\n      var btSave = document.getElementById('Save' + (activeRow - 1));\n      btSave.setAttribute('style', 'display:none;');\n\n      // SHOW THE UPDATE BUTTON AGAIN.\n      var btUpdate = document.getElementById('Edit' + (activeRow - 1));\n      btUpdate.setAttribute('style', 'display:block; margin:0 auto; background-color:#44CCEB;');\n\n      var tab = document.getElementById('booksTable').rows[activeRow];\n\n      for (i = 0; i < this.col.length; i++) {\n          var td = tab.getElementsByTagName(\"td\")[i];\n          td.innerHTML = this.drivers[(activeRow - 1)][this.col[i]];\n      }\n  }\n\n\n  // EDIT DATA.\n  this.Update = function (oButton) {\n      var activeRow = oButton.parentNode.parentNode.rowIndex;\n      var tab = document.getElementById('booksTable').rows[activeRow];\n\n      // SHOW A DROPDOWN LIST WITH A LIST OF CATEGORIES.\n      for (i = 1; i < 4; i++) {\n          if (i == 2) {\n              var td = tab.getElementsByTagName(\"td\")[i];\n              var ele = document.createElement('select');      // DROPDOWN LIST.\n              ele.innerHTML = '<option value=\"' + td.innerText + '\">' + td.innerText + '</option>';\n              for (k = 0; k < this.category.length; k++) {\n                  ele.innerHTML = ele.innerHTML +\n                      '<option value=\"' + this.category[k] + '\">' + this.category[k] + '</option>';\n              }\n              td.innerText = '';\n              td.appendChild(ele);\n          }\n          else {\n              var td = tab.getElementsByTagName(\"td\")[i];\n              var ele = document.createElement('input');      // TEXTBOX.\n              ele.setAttribute('type', 'text');\n              ele.setAttribute('value', td.innerText);\n              td.innerText = '';\n              td.appendChild(ele);\n          }\n      }\n\n      var lblCancel = document.getElementById('lbl' + (activeRow - 1));\n      lblCancel.setAttribute('style', 'cursor:pointer; display:block; width:20px; float:left; position: absolute;');\n\n      var btSave = document.getElementById('Save' + (activeRow - 1));\n      btSave.setAttribute('style', 'display:block; margin-left:30px; float:left; background-color:#2DBF64;');\n\n      // HIDE THIS BUTTON.\n      oButton.setAttribute('style', 'display:none;');\n  };\n\n\n  // DELETE DATA.\n  this.Delete = function (oButton) {\n      var activeRow = oButton.parentNode.parentNode.rowIndex;\n      this.drivers.splice((activeRow - 1), 1);    // DELETE THE ACTIVE ROW.\n      this.createTable();                         // REFRESH THE TABLE.\n  };\n\n  // SAVE DATA.\n  this.Save = function (oButton) {\n      var activeRow = oButton.parentNode.parentNode.rowIndex;\n      var tab = document.getElementById('booksTable').rows[activeRow];\n\n      // UPDATE drivers ARRAY WITH VALUES.\n      for (i = 1; i < this.col.length; i++) {\n          var td = tab.getElementsByTagName(\"td\")[i];\n          if (td.childNodes[0].getAttribute('type') == 'text' || td.childNodes[0].tagName == 'SELECT') {  // CHECK IF ELEMENT IS A TEXTBOX OR SELECT.\n              this.drivers[(activeRow - 1)][this.col[i]] = td.childNodes[0].value;      // SAVE THE VALUE.\n          }\n      }\n      this.createTable();     // REFRESH THE TABLE.\n  }\n\n  // CREATE NEW.\n  this.CreateNew = function (oButton) {\n      var activeRow = oButton.parentNode.parentNode.rowIndex;\n      var tab = document.getElementById('booksTable').rows[activeRow];\n      var obj = {};\n\n      // ADD NEW VALUE TO drivers ARRAY.\n      for (i = 1; i < this.col.length; i++) {\n          var td = tab.getElementsByTagName(\"td\")[i];\n          if (td.childNodes[0].getAttribute('type') == 'text' || td.childNodes[0].tagName == 'SELECT') {      // CHECK IF ELEMENT IS A TEXTBOX OR SELECT.\n              var txtVal = td.childNodes[0].value;\n              if (txtVal != '') {\n                  obj[this.col[i]] = txtVal.trim();\n              }\n              else {\n                  obj = '';\n                  alert('all fields are compulsory');\n                  break;\n              }\n          }\n      }\n      obj[this.col[0]] = this.drivers.length + 1;     // NEW ID.\n\n      if (Object.keys(obj).length > 0) {      // CHECK IF OBJECT IS NOT EMPTY.\n          this.drivers.push(obj);             // PUSH (ADD) DATA TO THE JSON ARRAY.\n          this.createTable();                 // REFRESH THE TABLE.\n      }\n  }\n\n  // ****** OPERATIONS END.\n}\n\ncrudApp.createTable();"),
	}
	file3 := &embedded.EmbeddedFile{
		Filename:    "framework.css",
		FileModTime: time.Unix(1531606442, 0),
		Content:     string("table \n{\n    width: 100%;\n    font: 17px Calibri;\n}\ntable, th, td \n{\n    border: solid 1px #DDD;\n    border-collapse: collapse;\n    padding: 2px 3px;\n    text-align: center;\n}\n\ninput[type='button'] \n{\n    font: 15px Calibri;\n    cursor: pointer;\n    border: none;\n    color: #FFF;\n}\n\ninput[type='text'], select \n{\n    font: 17px Calibri;\n    text-align: center;\n    border: solid 1px #CCC;\n    width: auto;\n    padding: 2px 3px;\n}"),
	}
	file4 := &embedded.EmbeddedFile{
		Filename:    "index.html",
		FileModTime: time.Unix(1531606531, 0),
		Content:     string("<!DOCTYPE html>\n<html>\n<head>\n    <title>CRUD Application using JavaScript</title>\n    <link rel=\"stylesheet\" href=\"framework.css\" />\n</head>\n<body>\n    <div id=\"container\" style=\"width:700px;\">\n    </div>\n</body>\n<script src=\"app.js\"></script>\n</html>"),
	}

	// define dirs
	dir1 := &embedded.EmbeddedDir{
		Filename:   "",
		DirModTime: time.Unix(1531601200, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file2, // "app.js"
			file3, // "framework.css"
			file4, // "index.html"

		},
	}

	// link ChildDirs
	dir1.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`website`, &embedded.EmbeddedBox{
		Name: `website`,
		Time: time.Unix(1531601200, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"": dir1,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"app.js":        file2,
			"framework.css": file3,
			"index.html":    file4,
		},
	})
}
